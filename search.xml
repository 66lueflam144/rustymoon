<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Funcky_Night</title>
    <url>/rustymoon/2023/10/28/Funcky-Night/</url>
    <content><![CDATA[<p>随手起的名字，只是忽然想起来在几首歌里都听过这个funcky。</p>
]]></content>
      <tags>
        <tag>ORN</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP_SSRF</title>
    <url>/rustymoon/2023/11/13/PHP-SSRF/</url>
    <content><![CDATA[<p>SSRF–服务端请求伪造</p>
<span id="more"></span>


<h1 id="SSRF危险函数"><a href="#SSRF危险函数" class="headerlink" title="SSRF危险函数"></a>SSRF危险函数</h1><h2 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a>curl_exec()</h2><blockquote>
<p>用该函数发起请求会用到libcurl库，该库支持HTTP，HTTPS，FTP，GOPHER，TELNET，DICT，FILE，IDAP协议。</p>
<blockquote>
<p>curl_exec() - 执行一个CURL会话</p>
</blockquote>
</blockquote>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">//demo.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html; charset = utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_FOLLOWLOCATION</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行之后as you can see：</p>
<img src="/rustymoon/2023/11/13/PHP-SSRF/PHP_SSRF.png" class title="SSRFpic">]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>SSRF</tag>
      </tags>
  </entry>
  <entry>
    <title>Read-How</title>
    <url>/rustymoon/2023/11/16/Read-How/</url>
    <content><![CDATA[<p>读了Mark Dowd在Offensive Con的演讲的一些摘要。</p>
<span id="more"></span>

<h1 id="我的摘要"><a href="#我的摘要" class="headerlink" title="我的摘要"></a>我的摘要</h1><p>不是全部，只是摘写了我认为重要的。</p>
<h2 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h2><h3 id="心态"><a href="#心态" class="headerlink" title="心态"></a>心态</h3><img src="/rustymoon/2023/11/16/Read-How/1.png" class title="一些必备的特质">

<p>允许我用某三部曲来形容（因为真的很贴）</p>
<ul>
<li><table><tr><td bgcolor="CCCCFF">FEARLESS</td></tr></table> </li>
<li><table><tr><td bgcolor="CCCCFF">ANTIFRAIGLE</td></tr></table></li>
<li><table><tr><td bgcolor="CCCCFF">UNFORGIVEN</td></tr></table></li>
</ul>
<p><font size="1">如果你懂那么你就会懂…</font></p>
<p>因为代码审计，寻找漏洞是一个Odessa的过程。Odessa不仅体现在读代码，也体现在如何利用，因为有些漏洞你找到了，却不知道怎么用，有些甚至是，不能利用。</p>
<p>除了上面的三部曲，还有一个<code>curiousity</code>，其实感觉这一个适用任何一个活动或者行业。</p>
<blockquote>
<p>不仅好奇如何找到漏洞，更好奇漏洞如何诞生，如何运作。</p>
</blockquote>
<hr>
<h3 id="BUG-PATCHING"><a href="#BUG-PATCHING" class="headerlink" title="BUG PATCHING"></a>BUG PATCHING</h3><img src="/rustymoon/2023/11/16/Read-How/bugpatching.png" class title="双刃剑">

<p>安全补丁是一个双刃剑，一端对着漏洞，一端对着自己。<br>它会告诉你一些之前的漏洞信息，你可以推测漏洞成因、类型，推断一些漏洞变体&#x2F;模式——没准又成功搞出一个漏洞。</p>
<hr>
<h3 id="傲慢与偏见"><a href="#傲慢与偏见" class="headerlink" title="傲慢与偏见"></a>傲慢与偏见</h3><p>这里面提到两个有意思的例子</p>
<ul>
<li><table><tr><td bgcolor="yellow">开源和闭源谁更安全</td></tr></table>

</li>
<li><table><tr><td bgcolor="yellow">there are no more bugs in this.</td></tr></table></li>
</ul>
<p>一个普遍的认为是，开源更安全，毕竟那么多人都在eyes on it。但事实是，三个和尚没水喝。Mark在开源中找到很多漏洞，惊于这些地方无人维护。</p>
<p>一个漏洞解决了就是ending了吗？就像上面提到的漏洞变体&#x2F;模式，还有相应的修复会引入一些微妙的问题——就像高中生物里面学的，遗传病，一个又一个微妙的基因通过生殖引入，最后snow crush。</p>
<hr>
<h3 id="“MOTTO”"><a href="#“MOTTO”" class="headerlink" title="“MOTTO”"></a>“MOTTO”</h3><p>Mark认为</p>
<p><em>对一个程序的工作原理了解得越多，就越有可能找到漏洞，并利用它们。</em></p>
<img src="/rustymoon/2023/11/16/Read-How/more.png" class title="MOTTO">

<p>本觉得对于我们还有一条，你首先要加载 漏洞 模块。</p>
<hr>
<br>
<br>
<br>


<h3 id="类似费曼学习法（感觉就是）"><a href="#类似费曼学习法（感觉就是）" class="headerlink" title="类似费曼学习法（感觉就是）"></a>类似费曼学习法（感觉就是）</h3><img src="/rustymoon/2023/11/16/Read-How/feiman.png" class title="费曼模块apply">

<p>就像写例会PPT的时候，总在想如果对方在这里那里提出一个问题怎么办？OMG我好像答不上来。在想用比较“人话”的话来解释一个漏洞的原理和怎么运行怎么被利用的时候，就会发现自己好像也有很多不懂……准确来说，有点像“例会上的被害妄想症”。</p>
<p><font size="1">这个方法对学习很有效，但我从来没用到我大学课程上面……不过最近看到数据结构与算法的课程设计有点挑战性，可以当作一次1 v 1的例会。</font></p>
<hr>
<br>
<br>

<h3 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h3><p><font size="1">每次提到这个词，脑海里都自动播放you got me looking for attention~</font></p>
<blockquote>
<p>攻击面</p>
</blockquote>
<img src="/rustymoon/2023/11/16/Read-How/att1.png" class title="攻击面">

<p>就如图所说，漏洞只是攻击面里面的一个子集，用一句话来说就是——有人发现了一个攻击面，然后全世界的漏洞都吻了上去。</p>
<br>
<br>
 
<blockquote>
<p>复杂性</p>
</blockquote>
<img src="/rustymoon/2023/11/16/Read-How/att2.png" class title="复杂性">

<p>其实没太懂这里的complexity指什么</p>
<p>个人理解：</p>
<ul>
<li><table><tr><td bgcolor="yellow">应用功能的增加带来程序的复杂也带来漏洞或潜在漏洞的增加。Feature—Driven，生命不息，漏洞不止</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">而开发人员对代码库的引用带来“多余功能”——只是想用代码库里某个功能，但把人一整个家族搬来，家族里面人员混杂，复杂性带来了潜在的漏洞。</td></tr></table></li>
</ul>
<hr>
<br>
<br>

<h3 id="“Findings”"><a href="#“Findings”" class="headerlink" title="“Findings”"></a>“Findings”</h3><p>也就是“随时记录”，idea、漏洞、错误什么的，一方面for积少成多，一方面for随时召回。</p>
<br>
<br>


<table><tr><td bgcolor="yellow">随时召回</td></tr></table>：就是字面意思了，有时候有些东西要记下来才行啊，然后一看，哦原来要搞这些，当时是这么想的。

<br>
<br>

<table><tr><td bgcolor="yellow">记录失败很重要</td></tr></table>for me 平时一些install，调试，exec老是出错但都是改完就扔，下次还犯。所以多记录（document）吧……

<hr>
<h3 id="“shared-experience”"><a href="#“shared-experience”" class="headerlink" title="“shared experience”"></a>“shared experience”</h3><br>

<p>这个其实是我自己取的名字<br>是对于bug patching和代码库的。当一个漏洞出现在a中，那么和a类似的b会不会也有这样的漏洞？——算法思想就那么多，这就是shared experience，再加上还是同类型，极大可能会有相同的bugs。如果没有，那么是怎么修补的呢？<br>可能人家b对于存在的bug from a的态度是：<strong>I Don’t Give A FUCK</strong>，那么就可以<em>give it a fuck</em>了（bushi）</p>
<hr>
<br>
<br>

<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>Mark认为Best cooperation makes Best output，同时工具开发和漏洞研究是分成两个世界的——指工具开发的可能没有漏洞研究的那么了解漏洞，反之可能没那么了解工具开发。</p>
<p>以及新手过度依赖工具，阅读和理解代码能力可能会达不到要求。往大了说我们就到了Cyberpunk的道德议题了——高度工具化的人类是否还是人类？</p>
<p>跑远了……</p>
<br>
<br>

<p>不过工具开发确实也很有意思。</p>
<hr>
<br>

<h3 id="“RULES”"><a href="#“RULES”" class="headerlink" title="“RULES”"></a>“RULES”</h3><ul>
<li><table><tr><td bgcolor="yellow">Understanding The Code</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Document Your Analysis</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Revist Code Bases</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Analyze Failures</td></tr></table></li>
</ul>
<p>人打不败自己的幻想？<br>半瓶子最骄傲。<br>自我中心，以为全世界eyes on me。<br>尊重more但是不在尊重范围内。<br>有条件的爱——外形、成绩……<br>kids’ love——可能是唯一感受的无条件爱。<br>在乎基本生存、财产、孩子未来，另一种在乎自己的快乐以及自己是谁</p>
]]></content>
      <tags>
        <tag>READING</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/rustymoon/2023/10/28/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>taocms-审计中</title>
    <url>/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/</url>
    <content><![CDATA[<p>因为ctf题目被暂时打入冷宫加上这个机会白要白不要，所以开始搞php代码审计<br>（一些代码注释都写代码块里面了）</p>
<span id="more"></span>


<h1 id="download-init"><a href="#download-init" class="headerlink" title="download&amp;init()"></a>download&amp;init()</h1><blockquote>
<p>用的是windows 11 + phpstudy_pro，Nginx1.15.11，MySQL5.7.26搭建的。</p>
</blockquote>
<ul>
<li><p>这里需要注意的是要在配置的时候创建一个数据库，后面install用得到。</p>
</li>
<li><p>phpstudy_pro的数据库端口默认3306（其实在数据库配置中也可以看到）。</p>
</li>
<li><p>根目录要到你下载的那个cms源码文件夹，不然可能访问不了（别问我怎么知道的）</p>
</li>
</ul>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/taocms1.png" class title="taocms安装完成">
<p>看到这个界面就安装成功了。</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/taocmsinit.png" class title="管理员登入界面">

<p>浅浅扫描一下：</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/taocms%E6%BC%8F%E6%B4%9E.png" class title="taocms漏洞">

<h1 id="前台路由-后台路由"><a href="#前台路由-后台路由" class="headerlink" title="前台路由&amp;后台路由"></a>前台路由&amp;后台路由</h1><p><font size="1">说实话，对<code>路由</code>的概念还停留在一个名为<code>路由器</code>的远远远房表亲那里。</font></p>
<p>前台路由和后台路由都是路由的一种形式，但它们的工作方式和用途有所不同。</p>
<p><strong>前台路由</strong>：</p>
<ul>
<li><p>前台路由是指在前端实现的路由，也就是在浏览器端实现的路由¹²。</p>
</li>
<li><p>它的特点是不需要向后台发送请求，不会刷新页面。</p>
</li>
<li><p>前台路由的任务是根据不同的URL更新页面的内容。</p>
</li>
<li><p>随着单页面应用（SPA）的普遍使用，前后端开发分离，项目中基本都使用前端路由。</p>
</li>
<li><p>例如，在使用Vue开发的SPA中，切换路由，并不刷新页面，而是根据路由在虚拟DOM中加载所需要的数据，实现页面内容的改变。</p>
</li>
</ul>
<p><strong>后台路由</strong>：</p>
<ul>
<li><p>后台路由是指在服务器端实现的路由。</p>
</li>
<li><p>它的特点是需要向服务器发送请求，会刷新页面。</p>
</li>
<li><p>在浏览器的地址栏中切换不同的URL时，每次都向后台服务器发出请求，服务器根据不同的URL响应不同的数据，浏览器接收到数据后再进行渲染。</p>
</li>
<li><p>所以后端路由会刷新页面，如果网速慢的话，就会看到一个空白页面等待服务端返回数据。</p>
</li>
<li><p>总的来说，前台路由和后台路由的主要区别在于，前台路由是在浏览器端处理URL和页面的映射关系，而后台路由是在服务器端处理这个映射关系。前台路由通常用于单页面应用（SPA），可以提供更好的用户体验，因为页面切换时不需要刷新。而后台路由则适用于传统的多页面应用，每次页面切换时都会向服务器发送请求并刷新页面。</p>
</li>
</ul>
<p>一些参考：</p>
<ul>
<li><a href="https://blog.csdn.net/qq_41671718/article/details/107059370">前端路由和后端路由的区别</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/426782949">说一说前端路由与后端路由的区别</a></li>
<li><a href="https://www.cnblogs.com/benpaodexiaopangzi/p/6018186.html">前端路由和后台路由有什么区别？</a></li>
</ul>
<hr>
<h2 id="本cms中的前台路由"><a href="#本cms中的前台路由" class="headerlink" title="本cms中的前台路由"></a>本cms中的前台路由</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">//api.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//启动新的或者现有的对话</span>
<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//打开该文件可以看到是安装cms时的数据库配置文件</span>
<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token constant">INC</span><span class="token operator">.</span><span class="token string single-quoted-string">'common.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这个common.php在include/里面，通用配置文件，22行使用了__autoload()方法来调用Model/下的功能代码</span>

<span class="token comment">//从请求中获取参数ctrl、action，再将值存在同名的变量中</span>
<span class="token variable">$ctrl</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ctrl'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$action</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//将action传来的参数首字母大写（类名首字母均大写）</span>
<span class="token variable">$m</span><span class="token operator">=</span><span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//判断是否为Api或者Commnet，不是就停止执行</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Api'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'Comment'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">die</span><span class="token punctuation">;</span>

<span class="token variable">$model</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token variable">$m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建新对象，对象的类名是$m的值</span>

<span class="token comment">//先检查$m类是否有一个名为$ctrl的方法，有就在$model上调用它。</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">,</span><span class="token variable">$ctrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token variable">$model</span><span class="token operator">-></span><span class="token variable">$ctrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>这段代码的主要目的是根据请求参数来动态地调用不同的类和方法。这是一种常见的设计模式，被称为前端控制器模式。这种模式可以使得代码更加模块化，更易于管理和扩展。</p>
</blockquote>
<hr>
<h2 id="本cms中的后端路由"><a href="#本cms中的后端路由" class="headerlink" title="本cms中的后端路由"></a>本cms中的后端路由</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token comment">//和前面api.php类似</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"../config.php"</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"../include/common.php"</span><span class="token punctuation">;</span>
<span class="token variable">$action</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$ctrl</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ctrl'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$id</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//强制转换为数组类型</span>

<span class="token comment">//请登录</span>
<span class="token comment">//检查是否为admin用户，不是且ctrl变量值不是checkUser，就显示一个空消息+跳转登录界面</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">checkadmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'login'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'checkUser'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"index.php?action=login"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//检查请求来源合法与否。从HTTP_REFERER的URL到主机名与端口。</span>
<span class="token variable">$referInfo</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_REFERER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$referHost</span><span class="token operator">=</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">:</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//进行与当前服务器的主机名与端口进行比较，不同且ctrl值不为login就报错+跳转登出界面</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$referHost</span> <span class="token operator">!==</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'refer error'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin.php?action=frame&amp;ctrl=logout'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//段代码首先检查用户是否有权限访问请求的动作。如果有权限，那么就检查请求的动作是否对应一个存在的类。如果存在，那么就创建一个新的对象，并检查这个对象是否有一个名为 $ctrl 的方法。如果有，那么就在这个对象上调用这个方法。</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">catauth</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$model</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token variable">$action</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span><span class="token variable">$ctrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token variable">$model</span><span class="token operator">-></span><span class="token variable">$ctrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>这段代码的主要目的是进行一系列的安全性检查，然后根据请求参数来动态地调用不同的类和方法。算是一个session校验。</p>
</blockquote>
<hr>
<hr>
<h1 id="Model"><a href="#Model" class="headerlink" title="Model&#x2F;"></a>Model&#x2F;</h1><p>前面那张扫描图，可以看到开工的方向。<br>再发一遍：</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/taocms%E6%BC%8F%E6%B4%9E.png" class title="taocms漏洞">


<p>由于这个管理员初始名字和密码太简单，弱口令就可以进入后台。</p>
<h2 id="任意文件上传"><a href="#任意文件上传" class="headerlink" title="任意文件上传"></a>任意文件上传</h2><blockquote>
<p>file_get_contents()</p>
</blockquote>
<table>
<thead>
<tr>
<th>漏洞</th>
<th>reason</th>
<th>more</th>
</tr>
</thead>
<tbody><tr>
<td>1.任意文件读取</td>
<td>参数可控，则可以通过构造payload读取任意位置文件</td>
<td><code>../</code>读取上级目录文件，绝对路径来读取任意位置的文件</td>
</tr>
<tr>
<td>2.远程文件包含</td>
<td>参数可控</td>
<td></td>
</tr>
<tr>
<td>3.信息泄露</td>
<td>参数可控</td>
<td></td>
</tr>
<tr>
<td>4.服务器端请求伪造</td>
<td>参数可控</td>
<td></td>
</tr>
</tbody></table>
<p>而来自工具扫描的结果：</p>
<table><tr><td bgcolor="FF3333">文件读取函数存在变量，可能会有任意文件读取漏洞</td></tr></table>

<hr>
<h3 id="upload"><a href="#upload" class="headerlink" title="upload?"></a>upload?</h3><p>因为<code>file_get_contents()</code>没有回显，所以要有echo,查看代码其实可以看到有一个</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//file.php</span>
<span class="token keyword">function</span> <span class="token function-definition function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$info</span><span class="token operator">=</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Disposition: attachment; filename="'</span><span class="token operator">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'basename'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">realpath</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//出现echo</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>那么寻找参数是否可控。</p>
<p>因为用的是vscode，所以用查找功能，在本php文件里找<code>realpath</code>这个参数，在开头这段代码里面找到：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//file.php</span>
<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">table</span><span class="token operator">=</span><span class="token variable">$table</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">realpath</span><span class="token operator">=</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tpl</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Template</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这段很好理解，在第三个<code>$this</code>找到<code>realpath</code>，其值由<code>path</code>拼接，同时，抬眼就能看到<code>path</code>都值是来自于请求的。</p>
<p>也就是说，参数可控。这个可控的参数就是<code>path</code>。</p>
<hr>
<p>在管理界面到处找找，于是找到<code>上传</code>这个东西，打开:</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/%E4%B8%8A%E4%BC%A0%E7%95%8C%E9%9D%A2.png" class title="上传界面">
<p>再回去到file.php中寻找相关代码：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//file.php</span>
<span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;form action="admin.php" method="post" id="toolform" enctype="multipart/form-data"> 
&lt;b>选择文件：&lt;/b>  
 &lt;input name="uploadfile" type="file" id="uploadfile" />
 &lt;input type="hidden" name="action" value="file" />
	&lt;input type="hidden" name="ctrl" value="executeupload" />
	&lt;input type="hidden" name="path" value="'</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token string single-quoted-string">'" />
 &lt;input type="submit" name="button" id="button" value="上传" />
&lt;/form>'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">function</span> <span class="token function-definition function">executeupload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$baseUrl</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token variable">$upload</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//前面提过，php类的首字母都是大写的，所以这是一个来自其他php文件的类</span>
		<span class="token variable">$state</span><span class="token operator">=</span><span class="token variable">$upload</span><span class="token operator">-></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'uploadfile'</span><span class="token punctuation">,</span><span class="token variable">$baseUrl</span><span class="token punctuation">,</span><span class="token constant">WEBURL</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$state</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'err'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">execmsg</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'上传失败，错误为：'</span><span class="token operator">.</span><span class="token variable">$state</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'err'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span><span class="token keyword">else</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">echo</span><span class="token string single-quoted-string">'&lt;script>window.opener.document.location.href="admin.php?action=file&amp;ctrl=lists&amp;path='</span><span class="token operator">.</span><span class="token variable">$baseUrl</span><span class="token operator">.</span><span class="token string single-quoted-string">'";window.close();&lt;/script>'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>用php文件测试一下</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%99%BD%E5%90%8D%E5%8D%95.png" class title="文件上传白名单">

<p>可以看到是采用白名单机制。</p>
<p>这个跳转得有点快，不过其实打开拥有<code>Upload()</code>类的<code>Upload.php</code>即可查看白名单</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//Upload.php 部分代码</span>
<span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token variable">$inputname</span><span class="token punctuation">,</span><span class="token variable">$attachdir</span><span class="token operator">=</span><span class="token string single-quoted-string">'pictures/'</span><span class="token punctuation">,</span><span class="token variable">$urldir</span><span class="token operator">=</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$dirtype</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">$maxattachsize</span><span class="token operator">=</span><span class="token number">10097152</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		<span class="token variable">$upext</span><span class="token operator">=</span><span class="token string single-quoted-string">'txt,rar,zip,jpg,jpeg,gif,png,swf,wmv,avi,wma,mp3,mid,jar,jad,exe,html,htm,css,js,doc'</span><span class="token punctuation">;</span><span class="token comment">//上传扩展名</span>
		<span class="token variable">$err</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>
		<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>
		<span class="token variable">$upfile</span><span class="token operator">=</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$inputname</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//获取上传文件</span>
		<span class="token variable">$fileinfo</span><span class="token operator">=</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用pathinfo()函数获取后缀名，pathinfo()无法绕过。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><font size="1">于是尝试一下<em>修改后缀名+.htaccess</em>的方法，不过搞一半被自己蠢笑了，都白名单了还上传<code>.htaccess</code>，不如洗洗睡了。</font></p>
<h4 id="pathinfo"><a href="#pathinfo" class="headerlink" title="pathinfo()"></a>pathinfo()</h4><p>name &#x3D; example.jpg<br>pathinfo($upfile[‘name’]);<br>返回数组：</p>
<pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Array
(
    [dirname] => .
    [basename] => example.jpg
    [extension] => jpg
    [filename] => example
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>name &#x3D; example.php.png<br>pathinfo($upfile[‘name’]);<br>返回数组：</p>
<pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Array
(
    [dirname] => .
    [basename] => test.php.png
    [extension] => png
    [filename] => test.php
)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li><code>dirname</code> 是文件所在的目录。如果文件名中没有目录信息，那么 dirname 就是当前目录，表示为 “.”。</li>
<li><code>basename</code> 是包含扩展名的完整文件名。</li>
<li><code>extension</code> 是文件的扩展名。</li>
<li><code>filename</code> 是不包含扩展名的文件名。</li>
</ul>
<p>所以这个函数不好绕过。</p>
<hr>
<h3 id="create"><a href="#create" class="headerlink" title="create?"></a>create?</h3><p>换个，来到<em>新建文件&#x2F;文件夹</em>这里，随便试试，发现还可以对新建的 文件&#x2F;文件夹 进行修改、删除。</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//file.php</span>

<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">table</span><span class="token operator">=</span><span class="token variable">$table</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">realpath</span><span class="token operator">=</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tpl</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Template</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//...</span>

<span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'请填写文件名/文件夹名'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以直接点击新建试试——这个实现的就是没有得到输入的name的值的时候报错。</span>
		<span class="token punctuation">&#125;</span>

		<span class="token comment">//这里有趣的是，没有对新建的目录或者文件有任何限制，也就是，可以任意文件后缀。绕过了那个白名单——白名单vain</span>
		<span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">realpath</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//构造了新文件或目录的完整路径，它是当前路径 $this->realpath 和 $_GET['name'] 拼接而成的</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isdir'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">'目录'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
			<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">'文件'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>


		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_writable</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'新建'</span><span class="token operator">.</span><span class="token variable">$str</span><span class="token operator">.</span><span class="token string single-quoted-string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//这两行代码首先获取新创建的文件或目录的路径信息，然后显示一个消息提示用户新建文件或目录成功，并附带一个链接，该链接指向新创建的文件或目录所在的目录的文件列表页面。这一点有点完美符合文件上传攻击典型模板了。</span>
		<span class="token variable">$info</span><span class="token operator">=</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'新建'</span><span class="token operator">.</span><span class="token variable">$str</span><span class="token operator">.</span><span class="token string single-quoted-string">'成功'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin.php?action=file&amp;ctrl=lists&amp;path='</span><span class="token operator">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dirname'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>所以建了一个<code>ice.php</code>，写入<code>&lt;?php @eval($_POST[&#39;cmd&#39;]);?&gt;</code>，上面有个提示当前文件地址be like</p>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/ice.png" class title="ice.php界面">

<p>然后用菜刀之类的工具，URL填的就是<code>http://taocms/ice.php</code>,密码填 cmd ，ok，连上。</p>
<p>如果直接访问<code>http://taocms/ice.php</code>其实什么也看不到，稍微修改一下<code>ice.php</code>里面写入的内容就可以实现其他的操作了。</p>
<p>有趣的是，由于这个cms里面管理员后台可以对所有文件进行查看和编辑，所以前面那个对于文件上传的白名单完全可以被修改，也不用费力气去找其他突破点。LOL。</p>
<hr>
<h3 id="SQL？"><a href="#SQL？" class="headerlink" title="SQL？"></a>SQL？</h3><p>管理员界面还有一个比较显眼的<code>执行SQL</code>，所以又去看<code>sql.php</code>:</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">excute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token comment">//传入的SQL语句作为sqltext的值</span>
	<span class="token variable">$creatTable</span><span class="token operator">=</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">magic2word</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sqltext'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$db</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Dbclass</span><span class="token punctuation">(</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token constant">DB_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//用query执行传入的SQL语句</span>
	<span class="token variable">$o</span><span class="token operator">=</span><span class="token variable">$db</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$creatTable</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span><span class="token string single-quoted-string">'&lt;pre>'</span><span class="token punctuation">;</span>

	<span class="token comment">//执行结果打印</span>
	<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-></span><span class="token function">fetch_array</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">execmsg</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'执行SQL'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'?action=sql&amp;ctrl=display'</span><span class="token punctuation">,</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>没有对执行的SQL语句有什么限制</p>
<hr>
<p><b><i>TEST</i></b>：</p>
<ul>
<li>1.<code>show tables;</code></li>
</ul>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/showtables.png" class title="show tables">

<p>可以得知：<br>1.database name &#x3D; <code>taocms</code><br>2.表名是<code>cms_admin</code></p>
<ul>
<li>2.<code>select * from cms_admin;</code></li>
</ul>
<img src="/rustymoon/2023/11/14/taocms-%E5%AE%A1%E8%AE%A1%E4%B8%AD/showcolumns.png" class title="show columns">

<p>这里有趣的是，在 用户修改 这个模块里看不到的管理员密码就这么找到了。要说有什么用，目前我也没看出来。</p>
<hr>
<hr>
<p>有个添加用户的，也许会有越权？</p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
</search>
